{"ast":null,"code":"import _slicedToArray from \"C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport useButton from '../useButton';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useMenuItem API](https://mui.com/base/api/use-menu-item/)\r\n */\n\nexport default function useMenuItem(props) {\n  var _itemState$disabled;\n\n  var _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      ref = props.ref,\n      label = props.label;\n  var id = useId();\n  var menuContext = React.useContext(MenuUnstyledContext);\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  var registerItem = menuContext.registerItem,\n      unregisterItem = menuContext.unregisterItem,\n      open = menuContext.open,\n      registerHighlightChangeHandler = menuContext.registerHighlightChangeHandler;\n  React.useEffect(function () {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled: disabled,\n      id: id,\n      ref: itemRef,\n      label: label\n    });\n    return function () {\n      return unregisterItem(id);\n    };\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible; // Ensure the menu item is focused when highlighted\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusRequested = _React$useState2[0],\n      requestFocus = _React$useState2[1];\n\n  var focusIfRequested = React.useCallback(function () {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(function () {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id: id,\n    disabled: disabled,\n    label: label\n  });\n  var itemState = menuContext.getItemState(id != null ? id : '');\n\n  var _ref = itemState != null ? itemState : {\n    highlighted: false\n  },\n      highlighted = _ref.highlighted;\n\n  var rerender = useForcedRerendering();\n  React.useEffect(function () {\n    function updateHighlightedState(highlightedItemId) {\n      if (highlightedItemId === id && !highlighted) {\n        rerender();\n      } else if (highlightedItemId !== id && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  React.useEffect(function () {\n    // TODO: this should be handled by the MenuButton\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: function getRootProps() {\n        var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n          role: 'menuitem'\n        });\n      },\n      disabled: false,\n      focusVisible: focusVisible,\n      highlighted: false\n    };\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var optionProps = menuContext.getItemProps(id, otherHandlers);\n      return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,\n    focusVisible: focusVisible,\n    highlighted: highlighted\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuUnstyledContext","useButton","useForcedRerendering","useMenuItem","props","_itemState$disabled","disabled","ref","label","id","menuContext","useContext","itemRef","useRef","handleRef","Error","registerItem","unregisterItem","open","registerHighlightChangeHandler","useEffect","undefined","focusableWhenDisabled","getButtonProps","getRootProps","focusVisible","useState","focusRequested","requestFocus","focusIfRequested","useCallback","current","focus","useDebugValue","itemState","getItemState","highlighted","rerender","updateHighlightedState","highlightedItemId","otherHandlers","role","optionProps","getItemProps","tabIndex"],"sources":["C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { MenuUnstyledContext } from '../MenuUnstyled';\r\nimport useButton from '../useButton';\r\nimport useForcedRerendering from '../utils/useForcedRerendering';\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useMenuItem API](https://mui.com/base/api/use-menu-item/)\r\n */\r\nexport default function useMenuItem(props) {\r\n  var _itemState$disabled;\r\n  const {\r\n    disabled = false,\r\n    ref,\r\n    label\r\n  } = props;\r\n  const id = useId();\r\n  const menuContext = React.useContext(MenuUnstyledContext);\r\n  const itemRef = React.useRef(null);\r\n  const handleRef = useForkRef(itemRef, ref);\r\n  if (menuContext === null) {\r\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\r\n  }\r\n  const {\r\n    registerItem,\r\n    unregisterItem,\r\n    open,\r\n    registerHighlightChangeHandler\r\n  } = menuContext;\r\n  React.useEffect(() => {\r\n    if (id === undefined) {\r\n      return undefined;\r\n    }\r\n    registerItem(id, {\r\n      disabled,\r\n      id,\r\n      ref: itemRef,\r\n      label\r\n    });\r\n    return () => unregisterItem(id);\r\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\r\n  const {\r\n    getRootProps: getButtonProps,\r\n    focusVisible\r\n  } = useButton({\r\n    disabled,\r\n    focusableWhenDisabled: true,\r\n    ref: handleRef\r\n  });\r\n\r\n  // Ensure the menu item is focused when highlighted\r\n  const [focusRequested, requestFocus] = React.useState(false);\r\n  const focusIfRequested = React.useCallback(() => {\r\n    if (focusRequested && itemRef.current != null) {\r\n      itemRef.current.focus();\r\n      requestFocus(false);\r\n    }\r\n  }, [focusRequested]);\r\n  React.useEffect(() => {\r\n    focusIfRequested();\r\n  });\r\n  React.useDebugValue({\r\n    id,\r\n    disabled,\r\n    label\r\n  });\r\n  const itemState = menuContext.getItemState(id != null ? id : '');\r\n  const {\r\n    highlighted\r\n  } = itemState != null ? itemState : {\r\n    highlighted: false\r\n  };\r\n  const rerender = useForcedRerendering();\r\n  React.useEffect(() => {\r\n    function updateHighlightedState(highlightedItemId) {\r\n      if (highlightedItemId === id && !highlighted) {\r\n        rerender();\r\n      } else if (highlightedItemId !== id && highlighted) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerHighlightChangeHandler(updateHighlightedState);\r\n  });\r\n  React.useEffect(() => {\r\n    // TODO: this should be handled by the MenuButton\r\n    requestFocus(highlighted && open);\r\n  }, [highlighted, open]);\r\n  if (id === undefined) {\r\n    return {\r\n      getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getButtonProps(otherHandlers), {\r\n        role: 'menuitem'\r\n      }),\r\n      disabled: false,\r\n      focusVisible,\r\n      highlighted: false\r\n    };\r\n  }\r\n  return {\r\n    getRootProps: (otherHandlers = {}) => {\r\n      const optionProps = menuContext.getItemProps(id, otherHandlers);\r\n      return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\r\n        tabIndex: optionProps.tabIndex,\r\n        id: optionProps.id,\r\n        role: 'menuitem'\r\n      });\r\n    },\r\n    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,\r\n    focusVisible,\r\n    highlighted\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}