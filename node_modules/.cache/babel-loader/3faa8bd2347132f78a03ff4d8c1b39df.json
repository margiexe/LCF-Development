{"ast":null,"code":"import _slicedToArray from \"C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colorSchemes\", \"components\"],\n    _excluded2 = [\"light\"];\nimport { deepmerge } from '@mui/utils';\nimport cssVarsParser from './cssVarsParser';\n\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  var _theme$colorSchemes = theme.colorSchemes,\n      colorSchemes = _theme$colorSchemes === void 0 ? {} : _theme$colorSchemes,\n      otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n\n  var _cssVarsParser = cssVarsParser(otherTheme, parserConfig),\n      rootVars = _cssVarsParser.vars,\n      rootCss = _cssVarsParser.css,\n      rootVarsWithDefaults = _cssVarsParser.varsWithDefaults;\n\n  var themeVars = rootVarsWithDefaults;\n  var colorSchemesMap = {};\n\n  var light = colorSchemes.light,\n      otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\n\n  Object.entries(otherColorSchemes || {}).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        scheme = _ref2[1];\n\n    var _cssVarsParser2 = cssVarsParser(scheme, parserConfig),\n        vars = _cssVarsParser2.vars,\n        css = _cssVarsParser2.css,\n        varsWithDefaults = _cssVarsParser2.varsWithDefaults;\n\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css: css,\n      vars: vars\n    };\n  });\n\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    var _cssVarsParser3 = cssVarsParser(light, parserConfig),\n        css = _cssVarsParser3.css,\n        vars = _cssVarsParser3.vars,\n        varsWithDefaults = _cssVarsParser3.varsWithDefaults;\n\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css: css,\n      vars: vars\n    };\n  }\n\n  var generateCssVars = function generateCssVars(colorScheme) {\n    if (!colorScheme) {\n      return {\n        css: rootCss,\n        vars: rootVars\n      };\n    }\n\n    return colorSchemesMap[colorScheme];\n  };\n\n  return {\n    vars: themeVars,\n    generateCssVars: generateCssVars\n  };\n}\n\nexport default prepareCssVars;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","cssVarsParser","prepareCssVars","theme","parserConfig","colorSchemes","otherTheme","rootVars","vars","rootCss","css","rootVarsWithDefaults","varsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","Object","entries","forEach","key","scheme","generateCssVars","colorScheme"],"sources":["C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"colorSchemes\", \"components\"],\r\n  _excluded2 = [\"light\"];\r\nimport { deepmerge } from '@mui/utils';\r\nimport cssVarsParser from './cssVarsParser';\r\nfunction prepareCssVars(theme, parserConfig) {\r\n  // @ts-ignore - ignore components do not exist\r\n  const {\r\n      colorSchemes = {}\r\n    } = theme,\r\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\r\n  const {\r\n    vars: rootVars,\r\n    css: rootCss,\r\n    varsWithDefaults: rootVarsWithDefaults\r\n  } = cssVarsParser(otherTheme, parserConfig);\r\n  let themeVars = rootVarsWithDefaults;\r\n  const colorSchemesMap = {};\r\n  const {\r\n      light\r\n    } = colorSchemes,\r\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, _excluded2);\r\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\r\n    const {\r\n      vars,\r\n      css,\r\n      varsWithDefaults\r\n    } = cssVarsParser(scheme, parserConfig);\r\n    themeVars = deepmerge(themeVars, varsWithDefaults);\r\n    colorSchemesMap[key] = {\r\n      css,\r\n      vars\r\n    };\r\n  });\r\n  if (light) {\r\n    // light color scheme vars should be merged last to set as default\r\n    const {\r\n      css,\r\n      vars,\r\n      varsWithDefaults\r\n    } = cssVarsParser(light, parserConfig);\r\n    themeVars = deepmerge(themeVars, varsWithDefaults);\r\n    colorSchemesMap.light = {\r\n      css,\r\n      vars\r\n    };\r\n  }\r\n  const generateCssVars = colorScheme => {\r\n    if (!colorScheme) {\r\n      return {\r\n        css: rootCss,\r\n        vars: rootVars\r\n      };\r\n    }\r\n    return colorSchemesMap[colorScheme];\r\n  };\r\n  return {\r\n    vars: themeVars,\r\n    generateCssVars\r\n  };\r\n}\r\nexport default prepareCssVars;"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,cAAD,EAAiB,YAAjB,CAAlB;AAAA,IACEC,UAAU,GAAG,CAAC,OAAD,CADf;AAEA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,YAA/B,EAA6C;EAC3C;EACA,0BAEMD,KAFN,CACIE,YADJ;EAAA,IACIA,YADJ,oCACmB,EADnB;EAAA,IAGEC,UAHF,GAGeT,6BAA6B,CAACM,KAAD,EAAQL,SAAR,CAH5C;;EAIA,qBAIIG,aAAa,CAACK,UAAD,EAAaF,YAAb,CAJjB;EAAA,IACQG,QADR,kBACEC,IADF;EAAA,IAEOC,OAFP,kBAEEC,GAFF;EAAA,IAGoBC,oBAHpB,kBAGEC,gBAHF;;EAKA,IAAIC,SAAS,GAAGF,oBAAhB;EACA,IAAMG,eAAe,GAAG,EAAxB;;EACM,IACFC,KADE,GAEAV,YAFA,CACFU,KADE;EAAA,IAGJC,iBAHI,GAGgBnB,6BAA6B,CAACQ,YAAD,EAAeN,UAAf,CAH7C;;EAINkB,MAAM,CAACC,OAAP,CAAeF,iBAAiB,IAAI,EAApC,EAAwCG,OAAxC,CAAgD,gBAAmB;IAAA;IAAA,IAAjBC,GAAiB;IAAA,IAAZC,MAAY;;IACjE,sBAIIpB,aAAa,CAACoB,MAAD,EAASjB,YAAT,CAJjB;IAAA,IACEI,IADF,mBACEA,IADF;IAAA,IAEEE,GAFF,mBAEEA,GAFF;IAAA,IAGEE,gBAHF,mBAGEA,gBAHF;;IAKAC,SAAS,GAAGb,SAAS,CAACa,SAAD,EAAYD,gBAAZ,CAArB;IACAE,eAAe,CAACM,GAAD,CAAf,GAAuB;MACrBV,GAAG,EAAHA,GADqB;MAErBF,IAAI,EAAJA;IAFqB,CAAvB;EAID,CAXD;;EAYA,IAAIO,KAAJ,EAAW;IACT;IACA,sBAIId,aAAa,CAACc,KAAD,EAAQX,YAAR,CAJjB;IAAA,IACEM,GADF,mBACEA,GADF;IAAA,IAEEF,IAFF,mBAEEA,IAFF;IAAA,IAGEI,gBAHF,mBAGEA,gBAHF;;IAKAC,SAAS,GAAGb,SAAS,CAACa,SAAD,EAAYD,gBAAZ,CAArB;IACAE,eAAe,CAACC,KAAhB,GAAwB;MACtBL,GAAG,EAAHA,GADsB;MAEtBF,IAAI,EAAJA;IAFsB,CAAxB;EAID;;EACD,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,WAAW,EAAI;IACrC,IAAI,CAACA,WAAL,EAAkB;MAChB,OAAO;QACLb,GAAG,EAAED,OADA;QAELD,IAAI,EAAED;MAFD,CAAP;IAID;;IACD,OAAOO,eAAe,CAACS,WAAD,CAAtB;EACD,CARD;;EASA,OAAO;IACLf,IAAI,EAAEK,SADD;IAELS,eAAe,EAAfA;EAFK,CAAP;AAID;;AACD,eAAepB,cAAf"},"metadata":{},"sourceType":"module"}