{"ast":null,"code":"import _slicedToArray from \"C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    var mql = window.matchMedia('(prefers-color-scheme: dark)');\n\n    if (mql.matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  }\n\n  return undefined;\n}\n\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n\n  return undefined;\n}\n\nexport function getColorScheme(state) {\n  return processState(state, function (mode) {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n\n    return undefined;\n  });\n}\n\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n\n  var value;\n\n  try {\n    value = localStorage.getItem(key) || undefined;\n\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {// Unsupported\n  }\n\n  return value || defaultValue;\n}\n\nexport default function useCurrentColorScheme(options) {\n  var _options$defaultMode = options.defaultMode,\n      defaultMode = _options$defaultMode === void 0 ? 'light' : _options$defaultMode,\n      defaultLightColorScheme = options.defaultLightColorScheme,\n      defaultDarkColorScheme = options.defaultDarkColorScheme,\n      _options$supportedCol = options.supportedColorSchemes,\n      supportedColorSchemes = _options$supportedCol === void 0 ? [] : _options$supportedCol,\n      _options$modeStorageK = options.modeStorageKey,\n      modeStorageKey = _options$modeStorageK === void 0 ? DEFAULT_MODE_STORAGE_KEY : _options$modeStorageK,\n      _options$colorSchemeS = options.colorSchemeStorageKey,\n      colorSchemeStorageKey = _options$colorSchemeS === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _options$colorSchemeS,\n      _options$storageWindo = options.storageWindow,\n      storageWindow = _options$storageWindo === void 0 ? typeof window === 'undefined' ? undefined : window : _options$storageWindo;\n  var joinedColorSchemes = supportedColorSchemes.join(',');\n\n  var _React$useState = React.useState(function () {\n    var initialMode = initializeValue(modeStorageKey, defaultMode);\n    var lightColorScheme = initializeValue(\"\".concat(colorSchemeStorageKey, \"-light\"), defaultLightColorScheme);\n    var darkColorScheme = initializeValue(\"\".concat(colorSchemeStorageKey, \"-dark\"), defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme: lightColorScheme,\n      darkColorScheme: darkColorScheme\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var colorScheme = getColorScheme(state);\n  var setMode = React.useCallback(function (mode) {\n    setState(function (currentState) {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n\n      var newMode = !mode ? defaultMode : mode;\n\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {// Unsupported\n      }\n\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  var setColorScheme = React.useCallback(function (value) {\n    if (!value) {\n      setState(function (currentState) {\n        try {\n          localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), defaultLightColorScheme);\n          localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), defaultDarkColorScheme);\n        } catch (e) {// Unsupported\n        }\n\n        return _extends({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(\"`\".concat(value, \"` does not exist in `theme.colorSchemes`.\"));\n      } else {\n        setState(function (currentState) {\n          var newState = _extends({}, currentState);\n\n          processState(currentState, function (mode) {\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-\").concat(mode), value);\n            } catch (e) {// Unsupported\n            }\n\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(function (currentState) {\n        var newState = _extends({}, currentState);\n\n        var newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        var newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(\"`\".concat(newLightColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-light\"), newLightColorScheme);\n            } catch (error) {// Unsupported\n            }\n          }\n        }\n\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(\"`\".concat(newDarkColorScheme, \"` does not exist in `theme.colorSchemes`.\"));\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n\n            try {\n              localStorage.setItem(\"\".concat(colorSchemeStorageKey, \"-dark\"), newDarkColorScheme);\n            } catch (error) {// Unsupported\n            }\n          }\n        }\n\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  var handleMediaQuery = React.useCallback(function (e) {\n    if (state.mode === 'system') {\n      setState(function (currentState) {\n        return _extends({}, currentState, {\n          systemMode: e != null && e.matches ? 'dark' : 'light'\n        });\n      });\n    }\n  }, [state.mode]); // Ref hack to avoid adding handleMediaQuery as a dep\n\n  var mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(function () {\n    var handler = function handler() {\n      return mediaListener.current.apply(mediaListener, arguments);\n    }; // Always listen to System preference\n\n\n    var media = window.matchMedia('(prefers-color-scheme: dark)'); // Intentionally use deprecated listener methods to support iOS & old browsers\n\n    media.addListener(handler);\n    handler(media);\n    return function () {\n      return media.removeListener(handler);\n    };\n  }, []); // Handle when localStorage has changed\n\n  React.useEffect(function () {\n    var handleStorage = function handleStorage(event) {\n      var value = event.newValue;\n\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return function () {\n        return storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme: colorScheme,\n    setMode: setMode,\n    setColorScheme: setColorScheme\n  });\n}","map":{"version":3,"names":["_extends","React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","initializeValue","key","defaultValue","value","localStorage","getItem","setItem","e","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","joinedColorSchemes","join","useState","initialMode","setState","colorScheme","setMode","useCallback","currentState","newMode","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","mediaListener","useRef","current","useEffect","handler","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\r\nexport function getSystemMode(mode) {\r\n  if (typeof window !== 'undefined' && mode === 'system') {\r\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\r\n    if (mql.matches) {\r\n      return 'dark';\r\n    }\r\n    return 'light';\r\n  }\r\n  return undefined;\r\n}\r\nfunction processState(state, callback) {\r\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\r\n    return callback('light');\r\n  }\r\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\r\n    return callback('dark');\r\n  }\r\n  return undefined;\r\n}\r\nexport function getColorScheme(state) {\r\n  return processState(state, mode => {\r\n    if (mode === 'light') {\r\n      return state.lightColorScheme;\r\n    }\r\n    if (mode === 'dark') {\r\n      return state.darkColorScheme;\r\n    }\r\n    return undefined;\r\n  });\r\n}\r\nfunction initializeValue(key, defaultValue) {\r\n  if (typeof window === 'undefined') {\r\n    return undefined;\r\n  }\r\n  let value;\r\n  try {\r\n    value = localStorage.getItem(key) || undefined;\r\n    if (!value) {\r\n      // the first time that user enters the site.\r\n      localStorage.setItem(key, defaultValue);\r\n    }\r\n  } catch (e) {\r\n    // Unsupported\r\n  }\r\n  return value || defaultValue;\r\n}\r\nexport default function useCurrentColorScheme(options) {\r\n  const {\r\n    defaultMode = 'light',\r\n    defaultLightColorScheme,\r\n    defaultDarkColorScheme,\r\n    supportedColorSchemes = [],\r\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\r\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\r\n    storageWindow = typeof window === 'undefined' ? undefined : window\r\n  } = options;\r\n  const joinedColorSchemes = supportedColorSchemes.join(',');\r\n  const [state, setState] = React.useState(() => {\r\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\r\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\r\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\r\n    return {\r\n      mode: initialMode,\r\n      systemMode: getSystemMode(initialMode),\r\n      lightColorScheme,\r\n      darkColorScheme\r\n    };\r\n  });\r\n  const colorScheme = getColorScheme(state);\r\n  const setMode = React.useCallback(mode => {\r\n    setState(currentState => {\r\n      if (mode === currentState.mode) {\r\n        // do nothing if mode does not change\r\n        return currentState;\r\n      }\r\n      const newMode = !mode ? defaultMode : mode;\r\n      try {\r\n        localStorage.setItem(modeStorageKey, newMode);\r\n      } catch (e) {\r\n        // Unsupported\r\n      }\r\n      return _extends({}, currentState, {\r\n        mode: newMode,\r\n        systemMode: getSystemMode(newMode)\r\n      });\r\n    });\r\n  }, [modeStorageKey, defaultMode]);\r\n  const setColorScheme = React.useCallback(value => {\r\n    if (!value) {\r\n      setState(currentState => {\r\n        try {\r\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\r\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\r\n        } catch (e) {\r\n          // Unsupported\r\n        }\r\n        return _extends({}, currentState, {\r\n          lightColorScheme: defaultLightColorScheme,\r\n          darkColorScheme: defaultDarkColorScheme\r\n        });\r\n      });\r\n    } else if (typeof value === 'string') {\r\n      if (value && !joinedColorSchemes.includes(value)) {\r\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\r\n      } else {\r\n        setState(currentState => {\r\n          const newState = _extends({}, currentState);\r\n          processState(currentState, mode => {\r\n            try {\r\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\r\n            } catch (e) {\r\n              // Unsupported\r\n            }\r\n            if (mode === 'light') {\r\n              newState.lightColorScheme = value;\r\n            }\r\n            if (mode === 'dark') {\r\n              newState.darkColorScheme = value;\r\n            }\r\n          });\r\n          return newState;\r\n        });\r\n      }\r\n    } else {\r\n      setState(currentState => {\r\n        const newState = _extends({}, currentState);\r\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\r\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\r\n        if (newLightColorScheme) {\r\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\r\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\r\n          } else {\r\n            newState.lightColorScheme = newLightColorScheme;\r\n            try {\r\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\r\n            } catch (error) {\r\n              // Unsupported\r\n            }\r\n          }\r\n        }\r\n        if (newDarkColorScheme) {\r\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\r\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\r\n          } else {\r\n            newState.darkColorScheme = newDarkColorScheme;\r\n            try {\r\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\r\n            } catch (error) {\r\n              // Unsupported\r\n            }\r\n          }\r\n        }\r\n        return newState;\r\n      });\r\n    }\r\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\r\n  const handleMediaQuery = React.useCallback(e => {\r\n    if (state.mode === 'system') {\r\n      setState(currentState => _extends({}, currentState, {\r\n        systemMode: e != null && e.matches ? 'dark' : 'light'\r\n      }));\r\n    }\r\n  }, [state.mode]);\r\n\r\n  // Ref hack to avoid adding handleMediaQuery as a dep\r\n  const mediaListener = React.useRef(handleMediaQuery);\r\n  mediaListener.current = handleMediaQuery;\r\n  React.useEffect(() => {\r\n    const handler = (...args) => mediaListener.current(...args);\r\n\r\n    // Always listen to System preference\r\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\r\n\r\n    // Intentionally use deprecated listener methods to support iOS & old browsers\r\n    media.addListener(handler);\r\n    handler(media);\r\n    return () => media.removeListener(handler);\r\n  }, []);\r\n\r\n  // Handle when localStorage has changed\r\n  React.useEffect(() => {\r\n    const handleStorage = event => {\r\n      const value = event.newValue;\r\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\r\n        // If the key is deleted, value will be null then reset color scheme to the default one.\r\n        if (event.key.endsWith('light')) {\r\n          setColorScheme({\r\n            light: value\r\n          });\r\n        }\r\n        if (event.key.endsWith('dark')) {\r\n          setColorScheme({\r\n            dark: value\r\n          });\r\n        }\r\n      }\r\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\r\n        setMode(value || defaultMode);\r\n      }\r\n    };\r\n    if (storageWindow) {\r\n      // For syncing color-scheme changes between iframes\r\n      storageWindow.addEventListener('storage', handleStorage);\r\n      return () => storageWindow.removeEventListener('storage', handleStorage);\r\n    }\r\n    return undefined;\r\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\r\n  return _extends({}, state, {\r\n    colorScheme,\r\n    setMode,\r\n    setColorScheme\r\n  });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}