{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n/**\r\n *\r\n * API:\r\n *\r\n * - [useOption API](https://mui.com/base/api/use-option/)\r\n */\n\nexport default function useOption(params) {\n  var value = params.value,\n      optionRefParam = params.optionRef;\n  var selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\n  }\n\n  var getOptionProps = selectContext.getOptionProps,\n      getOptionState = selectContext.getOptionState,\n      listboxRef = selectContext.listboxRef,\n      registerHighlightChangeHandler = selectContext.registerHighlightChangeHandler,\n      registerSelectionChangeHandler = selectContext.registerSelectionChangeHandler;\n  var optionState = getOptionState(value);\n  var selected = optionState.selected,\n      highlighted = optionState.highlighted;\n  var rerender = useForcedRerendering();\n  React.useEffect(function () {\n    function updateSelectedState(selectedValues) {\n      if (!selected) {\n        if (Array.isArray(selectedValues)) {\n          if (selectedValues.includes(value)) {\n            rerender();\n          }\n        } else if (selectedValues === value) {\n          rerender();\n        }\n      } else if (Array.isArray(selectedValues)) {\n        if (!selectedValues.includes(value)) {\n          rerender();\n        }\n      } else if (selectedValues !== value) {\n        rerender();\n      }\n    }\n\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\n  React.useEffect(function () {\n    function updateHighlightedState(highlightedValue) {\n      if (highlightedValue === value && !highlighted) {\n        rerender();\n      } else if (highlightedValue !== value && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\n  var optionRef = React.useRef(null);\n  var handleRef = useForkRef(optionRefParam, optionRef);\n  React.useEffect(function () {\n    // Scroll to the currently highlighted option\n    if (highlighted) {\n      if (!listboxRef.current || !optionRef.current) {\n        return;\n      }\n\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlighted, listboxRef]);\n  return {\n    getRootProps: function getRootProps() {\n      var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\n        ref: handleRef\n      });\n    },\n    highlighted: highlighted,\n    index: optionState.index,\n    selected: selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","SelectUnstyledContext","useForcedRerendering","useOption","params","value","optionRefParam","optionRef","selectContext","useContext","Error","getOptionProps","getOptionState","listboxRef","registerHighlightChangeHandler","registerSelectionChangeHandler","optionState","selected","highlighted","rerender","useEffect","updateSelectedState","selectedValues","Array","isArray","includes","updateHighlightedState","highlightedValue","useRef","handleRef","current","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getRootProps","otherHandlers","ref","index"],"sources":["C:/Users/Asus/Desktop/LCF-Deployment/node_modules/@mui/base/useOption/useOption.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\r\nimport useForcedRerendering from '../utils/useForcedRerendering';\r\n\r\n/**\r\n *\r\n * API:\r\n *\r\n * - [useOption API](https://mui.com/base/api/use-option/)\r\n */\r\nexport default function useOption(params) {\r\n  const {\r\n    value,\r\n    optionRef: optionRefParam\r\n  } = params;\r\n  const selectContext = React.useContext(SelectUnstyledContext);\r\n  if (!selectContext) {\r\n    throw new Error('Option must have access to the SelectUnstyledContext (i.e., be used inside a SelectUnstyled component).');\r\n  }\r\n  const {\r\n    getOptionProps,\r\n    getOptionState,\r\n    listboxRef,\r\n    registerHighlightChangeHandler,\r\n    registerSelectionChangeHandler\r\n  } = selectContext;\r\n  const optionState = getOptionState(value);\r\n  const {\r\n    selected,\r\n    highlighted\r\n  } = optionState;\r\n  const rerender = useForcedRerendering();\r\n  React.useEffect(() => {\r\n    function updateSelectedState(selectedValues) {\r\n      if (!selected) {\r\n        if (Array.isArray(selectedValues)) {\r\n          if (selectedValues.includes(value)) {\r\n            rerender();\r\n          }\r\n        } else if (selectedValues === value) {\r\n          rerender();\r\n        }\r\n      } else if (Array.isArray(selectedValues)) {\r\n        if (!selectedValues.includes(value)) {\r\n          rerender();\r\n        }\r\n      } else if (selectedValues !== value) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerSelectionChangeHandler(updateSelectedState);\r\n  }, [registerSelectionChangeHandler, rerender, selected, value]);\r\n  React.useEffect(() => {\r\n    function updateHighlightedState(highlightedValue) {\r\n      if (highlightedValue === value && !highlighted) {\r\n        rerender();\r\n      } else if (highlightedValue !== value && highlighted) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerHighlightChangeHandler(updateHighlightedState);\r\n  }, [registerHighlightChangeHandler, rerender, value, highlighted]);\r\n  const optionRef = React.useRef(null);\r\n  const handleRef = useForkRef(optionRefParam, optionRef);\r\n  React.useEffect(() => {\r\n    // Scroll to the currently highlighted option\r\n    if (highlighted) {\r\n      if (!listboxRef.current || !optionRef.current) {\r\n        return;\r\n      }\r\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\r\n      const optionClientRect = optionRef.current.getBoundingClientRect();\r\n      if (optionClientRect.top < listboxClientRect.top) {\r\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\r\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\r\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\r\n      }\r\n    }\r\n  }, [highlighted, listboxRef]);\r\n  return {\r\n    getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getOptionProps(value, otherHandlers), {\r\n      ref: handleRef\r\n    }),\r\n    highlighted,\r\n    index: optionState.index,\r\n    selected\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}